name: Spellcheck Documentation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  spellcheck:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: pip install codespell

      - name: Preprocess Ignore List for Case Sensitivity
        run: |
          # Ensure spellcheck-ignore.txt exists
          if [ ! -f .github/spellcheck-ignore.txt ]; then
            echo "spellcheck-ignore.txt not found!" && exit 1
          fi

          # Create a mapping of lowercase words to correct case-sensitive words
          awk '{print tolower($0), $0}' .github/spellcheck-ignore.txt > .github/spellcheck-ignore-case-mapping.txt

      - name: Run Spellcheck and Apply Case-Sensitive Corrections
        run: |
          set -e  # Exit on error

          # Run codespell and capture output
          codespell --ignore-words=.github/spellcheck-ignore.txt \
                    --skip=".git,*.lock,*.json,*.yaml,*.yml,*.css,*.html" \
                    --quiet-level=2 > spellcheck_report_raw.txt || true

          touch spellcheck_report.txt

          while read -r line; do
            word=$(echo "$line" | awk '{print $1}')
            suggestion=$(echo "$line" | awk '{print $3}')

            # Convert to lowercase for matching
            lowercase_suggestion=$(echo "$suggestion" | tr '[:upper:]' '[:lower:]')

            # Check if the suggested correction exists in spellcheck-ignore.txt with correct capitalization
            corrected_case=$(grep -i -w "$lowercase_suggestion" .github/spellcheck-ignore-case-mapping.txt | awk '{print $2}' | head -n 1)

            # If a case-sensitive match is found, replace it
            if [[ ! -z "$corrected_case" ]]; then
              echo "$word ==> $corrected_case" >> spellcheck_report.txt
            else
              # If no exact match, check for close matches in spellcheck-ignore.txt
              close_match=$(grep -i -w "$word" .github/spellcheck-ignore-case-mapping.txt | awk '{print $2}' | head -n 1)

              if [[ ! -z "$close_match" ]]; then
                echo "$word ==> $close_match (from ignore list, overriding dictionary)" >> spellcheck_report.txt
              else
                # Default to original suggestion if no better match found
                echo "$line" >> spellcheck_report.txt
              fi
            fi
          done < spellcheck_report_raw.txt

      - name: Debugging - Print Spellcheck Report
        if: always()
        run: |
          if [ -s spellcheck_report.txt ]; then
            cat spellcheck_report.txt
          else
            echo "No errors recorded."
          fi

      - name: Upload Spellcheck Report
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spellcheck-report
          path: spellcheck_report.txt
