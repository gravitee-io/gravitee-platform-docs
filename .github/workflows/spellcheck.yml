name: Spellcheck Documentation

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  spellcheck:
    name: Run Spellcheck
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Codespell
        run: pip install codespell

      - name: Run Spellcheck
        run: |
          set -e  # Exit on error to prevent silent failures

          # Define paths
          SPELLCHECK_OUTPUT="spellcheck_report.txt"
          IGNORE_LIST=".github/spellcheck-ignore.txt"
          EXCLUDE_PATTERNS=".github/exclude-patterns.txt"

          # Ensure required files exist
          for FILE in "$IGNORE_LIST" "$EXCLUDE_PATTERNS"; do
            if [[ ! -f "$FILE" ]]; then
              echo "Error: Required file $FILE is missing."
              exit 1
            fi
          done

          # Clear any existing report
          > "$SPELLCHECK_OUTPUT"

          # Run Codespell with exclusion rules
          codespell --ignore-words="$IGNORE_LIST" --quiet-level=2 --check-filenames --skip="*.json,*.yaml,*.yml" > temp_spelling_errors.txt || true

          # Process and filter the errors
          if [[ -s temp_spelling_errors.txt ]]; then
            while IFS= read -r line; do
              FILE=$(echo "$line" | cut -d':' -f1)
              LINE_NUM=$(echo "$line" | cut -d':' -f2)
              WORD=$(echo "$line" | cut -d':' -f3-)

              if [[ -z "$FILE" || -z "$LINE_NUM" || -z "$WORD" ]]; then
                continue
              fi

              # Skip words matching excluded patterns
              if grep -q -E -f "$EXCLUDE_PATTERNS" <<< "$WORD"; then
                continue
              fi

              # Enforce case-sensitive checking in normal text
              if grep -Fxq "$WORD" "$IGNORE_LIST"; then
                continue
              fi

              # Allow lowercase versions inside backticks or code blocks
              if [[ "$WORD" =~ ^\`.*\`$ || "$WORD" =~ ^<code>.*</code>$ ]]; then
                WORD_LOWER=$(echo "$WORD" | tr '[:upper:]' '[:lower:]')
                if grep -Fxq "$WORD_LOWER" "$IGNORE_LIST"; then
                  continue
                fi
              fi

              # Write to report
              if ! grep -Fxq "$FILE" "$SPELLCHECK_OUTPUT"; then
                echo -e "\n$FILE" >> "$SPELLCHECK_OUTPUT"
              fi
              echo "  Line $LINE_NUM: $WORD" >> "$SPELLCHECK_OUTPUT"
            done < temp_spelling_errors.txt
          fi

          # Cleanup
          rm -f temp_spelling_errors.txt

      - name: Upload Spellcheck Report (if errors found)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: spellcheck_report
          path: spellcheck_report.txt
