#!/bin/bash

# Define the output file for storing spelling errors
SPELLCHECK_OUTPUT="spellcheck_report.txt"
IGNORE_LIST="spellcheck_ignore.txt"
EXCLUDE_PATTERNS="exclude-patterns.txt"

# Clear previous report if it exists
> "$SPELLCHECK_OUTPUT"

# Run codespell on all relevant files and process the output
codespell --ignore-words="$IGNORE_LIST" --quiet-level=2 --check-filenames --write-changes | while read -r line; do
    # Extract filename, line number, and the misspelled word
    FILE=$(echo "$line" | cut -d':' -f1)
    LINE_NUM=$(echo "$line" | cut -d':' -f2)
    WORD=$(echo "$line" | cut -d':' -f3-)

    # Only process lines that contain a filename, line number, and misspelling
    if [[ -n "$FILE" && -n "$LINE_NUM" && -n "$WORD" ]]; then
        # Skip lines that match exclusion patterns (code blocks, HTML, etc.)
        if grep -q -E -f "$EXCLUDE_PATTERNS" <<< "$WORD"; then
            continue
        fi

        # Ensure case sensitivity for words in normal text
        if grep -Fxq "$WORD" "$IGNORE_LIST"; then
            continue
        fi

        # Allow lowercase versions inside backticks or code blocks
        if [[ "$WORD" =~ ^\`.*\`$ || "$WORD" =~ ^<code>.*</code>$ ]]; then
            WORD_LOWER=$(echo "$WORD" | tr '[:upper:]' '[:lower:]')
            if grep -Fxq "$WORD_LOWER" "$IGNORE_LIST"; then
                continue
            fi
        fi

        # If the filename is not yet in the output, add it with a blank line before it
        if ! grep -Fxq "$FILE" "$SPELLCHECK_OUTPUT"; then
            if [ -s "$SPELLCHECK_OUTPUT" ]; then
                echo "" >> "$SPELLCHECK_OUTPUT"
            fi
            echo "$FILE" >> "$SPELLCHECK_OUTPUT"
        fi

        # Append the misspelling and line number
        echo "  Line $LINE_NUM: $WORD" >> "$SPELLCHECK_OUTPUT"
    fi
done

# Print a message indicating completion
echo "Spellcheck completed. Results saved in $SPELLCHECK_OUTPUT."
