name: Manual Spellcheck & AI Grammar Correction with Code Comment Support

on:
  workflow_dispatch:

permissions:
  contents: write
  pull-requests: write

jobs:
  spellcheck_grammar_review:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Install Dependencies
        run: |
          sudo apt update && sudo apt install -y default-jre
          export JAVA_HOME=/usr/lib/jvm/java-11-openjdk-amd64
          pip install codespell fuzzywuzzy[speedup] sentence-splitter --upgrade lxml
          pip install git+https://github.com/jxmorris12/language_tool_python.git

      - name: Verify Ignore List Exists
        run: |
          if [ ! -f .github/spellcheck-ignore.txt ]; then
            echo "Error: spellcheck-ignore.txt not found!" && exit 1
          fi

      - name: Run Spellcheck and Apply Fixes
        run: |
          set -e

          python3 <<EOF
          import re, os, language_tool_python

          ignore_list = {line.strip().lower(): line.strip() for line in open(".github/spellcheck-ignore.txt", "r", encoding="utf-8")}
          tool = language_tool_python.LanguageTool('en-US')

          def is_comment(line, inside_code_block):
              if re.match(r'^\s*```', line):  
                  return not inside_code_block, False
              return inside_code_block, bool(re.match(r'^\s*(#|//|/\*|/\*\*)', line))

          def is_code_or_url(line):
              return bool(re.search(r'https?://\S+|`.*?`|www\.\S+', line))

          def apply_spellcheck(sentence):
              return " ".join([ignore_list.get(word.lower(), word) for word in sentence.split()])

          def apply_grammar(sentence):
              try:
                  matches = tool.check(sentence)
              except Exception:
                  return sentence
              corrections = [(m.offset, m.context, m.replacements[0]) for m in matches if m.replacements and m.context.lower() not in ignore_list]
              for offset, original, replacement in sorted(corrections, key=lambda x: -x[0]):
                  sentence = sentence[:offset] + replacement + sentence[offset + len(original):]
              return sentence

          for root, _, files in os.walk("."):
              for file in files:
                  if file.endswith((".md", ".txt", ".py", ".js", ".java", ".cpp", ".ts")):
                      path = os.path.join(root, file)
                      lines = open(path, "r", encoding="utf-8").readlines()
                      inside_code = False
                      with open(path, "w", encoding="utf-8") as f:
                          for line in lines:
                              orig = line.strip()
                              inside_code, is_comment = is_comment(line, inside_code)
                              if inside_code and not is_comment or not orig or is_code_or_url(orig):
                                  f.write(line)
                                  continue
                              fixed = apply_spellcheck(orig)
                              f.write(apply_grammar(fixed) + "\n")
          EOF

      - name: Create PR if Changes Exist
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          if git diff --quiet; then exit 0; fi
          git checkout -b spellcheck-grammar-fixes
          git add .
          git commit -m "Spellcheck & Grammar Fixes"
          git push origin spellcheck-grammar-fixes
          gh pr create --base main --head spellcheck-grammar-fixes --title "Spellcheck & Grammar Fixes"
